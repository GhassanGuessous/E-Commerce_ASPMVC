@model E_Commerce.Models.Commande

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Commande</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.Label("cat", "Catégories", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("cat", ViewBag.c as SelectList, "Selectionner une catégorie", htmlAttributes: new { @class = "form-control", id = "selectedCategorie" })
                            @Html.ValidationMessage("cat", "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NumArticle, "Article", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select id="articlesContent" name="NumArticle" class="form-control">
                                <option>Selectionner un article</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Article.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Article.Stock, new { htmlAttributes = new { @class = "form-control", id = "stock" } })
                            @Html.ValidationMessageFor(model => model.Article.Stock, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.QteArticle, "Quantité", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.QteArticle, new { htmlAttributes = new { @class = "form-control", id = "qte", min = "1", step = "1" } })
                            @Html.ValidationMessageFor(model => model.QteArticle, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" id="btnSubmit" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-6">
            <h4>Panier</h4>
            <hr />
            <table class="table" id="listcmd">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Article.Designation)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.QteArticle)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Article.Photo)
                    </th>
                </tr>

                @foreach (var item in ViewBag.ArticlesPanier)
                {
                    <tr>
                        <td>
                            @item.NumArticle
                        </td>
                        <td>
                            @item.QteArticle
                        </td>
                        <td>
                            
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/CommandeAjax")

}
